{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayettey\\\\Desktop\\\\sportpollv3\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport poll from './Event';\nimport './App.css';\nimport test from \"./test-assignment\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(BPP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nclass BPP extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Event \"), \" \", React.createElement(\"div\", {\n      className: \"vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"vote\",\n      type: \"button\",\n      value: \"Vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sport_event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"event_items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Away\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Group\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Sport\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Created date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"ID\")))))));\n  }\n\n  componentDidMount() {\n    let eventItems = document.querySelector(\"#event_items\");\n    let eventList = JSON.parse(JSON.stringify(test));\n    let shuffle = Math.round(Math.round() * Math.random() * 5);\n    alert(shuffle.valueOf());\n\n    if (shuffle.valueOf() == 1) {}\n\n    for (let val of eventList) {\n      eventItems.innerHTML += \"\\n          <tr>\\n          <td class=\\\"away_name\\\">\\n             \".concat(val.awayName, \"\\n          </td>\\n          <td class = \\\"home_name\\\" >\\n               \").concat(val.homeName, \"\\n              </td>\\n              \\n               <td class = \\\"group\\\" >\\n                \").concat(val.group, \"\\n              </td>\\n               \\n               <td class = \\\"name\\\" >\\n               \").concat(val.name, \"\\n              </td>\\n               <td class = \\\"sport_type\\\" >\\n               \").concat(val.sport, \"\\n              </td>\\n               <td class = \\\"state\\\" >\\n               \").concat(val.state, \"\\n              </td>\\n               <td class = \\\"home_name\\\" >\\n               \").concat(val.country, \"\\n              </td>\\n               <td class = \\\"create_date\\\" >\\n              \").concat(val.createdAt, \"\\n              </td>\\n              <td class = \\\"id\\\" >\\n                 \").concat(val.id, \"\\n              </td>\\n             \\n          </tr>\\n      \\n          \");\n      /*<td class=\"name\">\n         Date\n      </td>\n      <td class=\"group_name\" >\n         Date\n         </td>\n      <td class=\"object_id\">\n         Date\n      </td>\n      < td\n      className = \"id\" >\n         Date\n         </td>\n      <td className=\"sport\">\n         Date\n      </td>\n      < td\n      className = \"state\" >\n         Date\n         </td>\n      <td className=\"country\">\n         Date\n      </td>*/\n      //sportEvent.item(0).innerHTML+=val.awayName;\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ayettey\\Desktop\\sportpollv3\\src\\App.js"],"names":["React","poll","test","App","BPP","Component","render","componentDidMount","eventItems","document","querySelector","eventList","JSON","parse","stringify","shuffle","Math","round","random","alert","valueOf","val","innerHTML","awayName","homeName","group","name","sport","state","country","createdAt","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport poll from './Event'\nimport './App.css'\nimport test from \"./test-assignment\"\n\n\nfunction App() {\n\n\n\n  return (\n\n\n    <div className=\"App\">\n\n    <BPP/>\n\n    </div>\n\n\n\n\n  );\n}\n\nclass BPP extends React.Component{\n\n    render(){\n\n        return (\n                <div>\n                <div className=\"bar\"><span className=\"title\">Event </span> <div className=\"vote\"><input id=\"vote\" type=\"button\" value=\"Vote\"/></div></div>\n\n                <div>\n                    <div className='sport_event'>\n                    <table id=\"event_items\">\n                        <tbody>\n                        <tr>\n                            <th>\n                                Away\n                            </th>\n                            <th>\n                                Home\n                            </th>\n\n                            <th>\n                               Name\n                            </th>\n\n\n                            <th>\n                                Group\n                            </th>\n                            <th>\n                                Sport\n                            </th>\n                            <th>\n                                State\n                            </th>\n                            <th>\n                                Country\n                            </th>\n                            <th>\n                                Created date\n                            </th>\n                            <th>\n                                ID\n                            </th>\n                        </tr>\n                        </tbody>\n\n\n\n                    </table>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount(){\n        let eventItems=document.querySelector(\"#event_items\");\n        let eventList=JSON.parse(JSON.stringify(test));\n\n        let shuffle=Math.round(Math.round()*Math.random()*5);\n         alert(shuffle.valueOf())\n        if(shuffle.valueOf()==1){\n\n        }\n        for(let val of eventList){\n\n             eventItems.innerHTML+=`\n          <tr>\n          <td class=\"away_name\">\n             ${val.awayName}\n          </td>\n          <td class = \"home_name\" >\n               ${val.homeName}\n              </td>\n              \n               <td class = \"group\" >\n                ${val.group}\n              </td>\n               \n               <td class = \"name\" >\n               ${val.name}\n              </td>\n               <td class = \"sport_type\" >\n               ${val.sport}\n              </td>\n               <td class = \"state\" >\n               ${val.state}\n              </td>\n               <td class = \"home_name\" >\n               ${val.country}\n              </td>\n               <td class = \"create_date\" >\n              ${val.createdAt}\n              </td>\n              <td class = \"id\" >\n                 ${val.id}\n              </td>\n             \n          </tr>\n      \n          `\n          \n           /*<td class=\"name\">\n              Date\n          </td>\n          <td class=\"group_name\" >\n              Date\n              </td>\n          <td class=\"object_id\">\n              Date\n          </td>\n          < td\n          className = \"id\" >\n              Date\n              </td>\n          <td className=\"sport\">\n              Date\n          </td>\n          < td\n          className = \"state\" >\n              Date\n              </td>\n          <td className=\"country\">\n              Date\n          </td>*/\n            //sportEvent.item(0).innerHTML+=val.awayName;\n        }\n\n    }\n\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}