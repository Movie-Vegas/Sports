{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayettey\\\\Desktop\\\\sportpollv3\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport test from \"./test-assignment\";\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(BPP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}\n\nclass BPP extends React.Component {\n  render() {\n    return this.view();\n  }\n\n  view() {\n    return \"<div>\\n            <div class=\\\"bar\\\"><span class=\\\"title\\\">Event </span><span id=\\\"teams_place_holder\\\"> </span> <span id=\\\"score\\\"> </span><div class=\\\"vote\\\"><input id=\\\"vote\\\" type=\\\"button\\\" value=\\\"Vote\\\"/></div></div>\\n            <div>\\n                <div class='sport_event'>\\n                    <div id=\\\"user\\\">\\n                        <div id=\\\"what_ami\\\"> </div>\\n                        <input id=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Enter your name\\\"/> <input id=\\\"cancel\\\" type=\\\"button\\\" value=\\\"Cancel\\\" /><input id=\\\"ok\\\" type=\\\"button\\\" value=\\\"OK\\\" /></div>\\n\\n                    <table id=\\\"event_items\\\">\\n                        <tbody>\\n                        <tr>\\n                            <th>\\n                                Away\\n                            </th>\\n                            <th>\\n                                Home\\n                            </th>\\n\\n                            <th>\\n                                Name\\n                            </th>\\n\\n\\n                            <th>\\n                                Group\\n                            </th>\\n                            <th>\\n                                Sport\\n                            </th>\\n                            <th>\\n                                State\\n                            </th>\\n                            <th>\\n                                Country\\n                            </th>\\n                            <th>\\n                                Created date\\n                            </th>\\n                            <th>\\n                                ID\\n                            </th>\\n                        </tr>\\n                        </tbody>\\n\\n\\n\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\";\n  }\n  /*\n  eventTable(val){\n      let eventItems=document.querySelector(\"#event_items\");\n      eventItems.innerHTML+=`\n        <tr>\n        <td title=\"click to select Away\" class=\"team\">\n           ${val.awayName}\n        </td>\n        <td title=\"click to select Home\" class = \"team\" >\n             ${val.homeName}\n            </td>\n            \n             <td class = \"group\" >\n              ${val.group}\n            </td>\n             \n             <td class = \"name\" >\n             ${val.name}\n            </td>\n             <td class = \"sport_type\" >\n             ${val.sport}\n            </td>\n             <td class = \"state\" >\n             ${val.state}\n            </td>\n             <td class = \"home_name\" >\n             ${val.country}\n            </td>\n             <td class = \"create_date\" >\n            ${val.createdAt}\n            </td>\n            <td class = \"id\" >\n               ${val.id}\n            </td>\n           \n        </tr>\n    \n        `\n  }\n   loadDBEngine(){\n      let eventList=JSON.parse(JSON.stringify(test));\n       let shuffle=Math.floor(Math.random() * Math.floor(5));\n      var state=[];\n      let index=1;\n       for(let val of eventList){\n            if(shuffle.valueOf()===0 && val.sport===\"FOOTBALL\"){\n              this.eventTable(val);\n              state[index]=val.state;\n              ++index;\n            }else  if(shuffle.valueOf()===1 && val.sport===\"SNOOKER\"){\n              this.eventTable(val);\n              state[index]=val.state;\n              ++index;\n            } else  if(shuffle.valueOf()===2 && val.sport===\"HANDBALL\"){\n              this.eventTable(val);\n              state[index]=val.state;\n              ++index;\n            }else if(shuffle.valueOf()===3 && val.sport===\"ICE_HOCKEY\"){\n              this.eventTable(val);\n              state[index]=val.state;\n              ++index;\n            }else if(shuffle.valueOf()===4 && val.sport===\"TENNIS\"){\n              this.eventTable(val);\n              state[index]=val.state;\n              ++index;\n           }\n  \n      }\n       this.vote(state);\n  }\n    vote(state){\n       let team=document.querySelectorAll(\".team\");\n       let user=document.querySelector(\"#user\");\n       let ok=document.querySelector(\"#ok\");\n       let name=document.querySelector(\"#name\");\n       let teamCss=\"background-color:green; color:white\";\n       let whatAmI=document.querySelector(\"#what_ami\");\n       let vote=document.querySelector(\"#vote\");\n       let winner=document.querySelector(\"#teams_place_holder\");\n       let score=document.querySelector(\"#score\");\n       var awayEngine;\n       var homeEngine;\n       let count=0;\n         team.forEach(function (el,key) {\n            el.addEventListener(\"click\",function (ev) {\n               el.style.cssText=teamCss;\n               ev.preventDefault();\n               ev.stopImmediatePropagation();\n               awayEngine=Math.floor(Math.random() * Math.floor(5));\n               homeEngine=Math.floor(Math.random() * Math.floor(5));\n               const rows = document.querySelectorAll('tr');\n               const rowsArray = Array.from(rows);\n               const rowIndex = rowsArray.findIndex(row => row.contains(ev.target));\n                 if(state[rowIndex]===\"FINISHED\"){\n                    el.style.cssText=\"background-color:white color:black\";\n                   alert(\"The poll has already finished, choose another team\" )\n               } else if(key===0){\n                   count+=1;\n                    whatAmI.textContent=\"Away\";\n                   name.value=\"\";\n                   return false;\n                }else {\n                   whatAmI.textContent=\"Home\";\n                   count+=1;\n                   name.value=\"\";\n                   return false;\n               }\n            });\n          });\n        vote.addEventListener(\"click\",function (e) {\n           if(count<=1){\n               alert(\"needed two team to vote\");\n               return false;\n           }else {\n               if(awayEngine>homeEngine){\n                   winner.textContent=\"Away Team\";\n                   score.textContent=\"Wins\";\n                   count=0;\n               }else  if(homeEngine>awayEngine) {\n                   winner.textContent=\"Home Team\";\n                   score.textContent=\"Wins\";\n                   count=0;\n                }else {\n                   winner.textContent=\"Team\";\n                   score.textContent=\"Draw\";\n                   count=0;\n               }\n            }\n           team.forEach(function (el) {\n                el.style.cssText=\"background-color:white; color:black\";\n           });\n            e.stopImmediatePropagation();\n           e.preventDefault();\n       });\n       ok.addEventListener(\"click\",function (ev){\n           if ([\"\",\" \",undefined].includes(name.value)){\n               alert(\"The name field must not be left empty\")\n           } else {\n               user.style.display=\"none\";\n           }\n         })\n       }\n      componentDidMount() {\n        this.loadDBEngine();\n        }*/\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Ayettey\\Desktop\\sportpollv3\\src\\App.js"],"names":["React","test","App","BPP","Component","render","view"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAGA,SAASC,GAAT,GAAe;AAIb,SAGE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAHF;AAaD;;AAED,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAE7BC,EAAAA,MAAM,GAAE;AAEJ,WAAO,KAAKC,IAAL,EAAP;AACH;;AAEDA,EAAAA,IAAI,GAAE;AACF;AAkDH;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5D6B;;AAgQjC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css'\nimport test from \"./test-assignment\"\n\n\nfunction App() {\n\n\n\n  return (\n\n\n    <div className=\"App\">\n\n    <BPP/>\n\n    </div>\n\n\n\n\n  );\n}\n\nclass BPP extends React.Component{\n\n    render(){\n\n        return this.view();\n    }\n\n    view(){\n        return `<div>\n            <div class=\"bar\"><span class=\"title\">Event </span><span id=\"teams_place_holder\"> </span> <span id=\"score\"> </span><div class=\"vote\"><input id=\"vote\" type=\"button\" value=\"Vote\"/></div></div>\n            <div>\n                <div class='sport_event'>\n                    <div id=\"user\">\n                        <div id=\"what_ami\"> </div>\n                        <input id=\"name\" type=\"text\" placeholder=\"Enter your name\"/> <input id=\"cancel\" type=\"button\" value=\"Cancel\" /><input id=\"ok\" type=\"button\" value=\"OK\" /></div>\n\n                    <table id=\"event_items\">\n                        <tbody>\n                        <tr>\n                            <th>\n                                Away\n                            </th>\n                            <th>\n                                Home\n                            </th>\n\n                            <th>\n                                Name\n                            </th>\n\n\n                            <th>\n                                Group\n                            </th>\n                            <th>\n                                Sport\n                            </th>\n                            <th>\n                                State\n                            </th>\n                            <th>\n                                Country\n                            </th>\n                            <th>\n                                Created date\n                            </th>\n                            <th>\n                                ID\n                            </th>\n                        </tr>\n                        </tbody>\n\n\n\n                    </table>\n                </div>\n            </div>\n        </div>`;\n    }\n\n    /*\n    eventTable(val){\n        let eventItems=document.querySelector(\"#event_items\");\n        eventItems.innerHTML+=`\n          <tr>\n          <td title=\"click to select Away\" class=\"team\">\n             ${val.awayName}\n          </td>\n          <td title=\"click to select Home\" class = \"team\" >\n               ${val.homeName}\n              </td>\n              \n               <td class = \"group\" >\n                ${val.group}\n              </td>\n               \n               <td class = \"name\" >\n               ${val.name}\n              </td>\n               <td class = \"sport_type\" >\n               ${val.sport}\n              </td>\n               <td class = \"state\" >\n               ${val.state}\n              </td>\n               <td class = \"home_name\" >\n               ${val.country}\n              </td>\n               <td class = \"create_date\" >\n              ${val.createdAt}\n              </td>\n              <td class = \"id\" >\n                 ${val.id}\n              </td>\n             \n          </tr>\n      \n          `\n    }\n\n    loadDBEngine(){\n        let eventList=JSON.parse(JSON.stringify(test));\n\n        let shuffle=Math.floor(Math.random() * Math.floor(5));\n        var state=[];\n        let index=1;\n\n        for(let val of eventList){\n\n\n            if(shuffle.valueOf()===0 && val.sport===\"FOOTBALL\"){\n                this.eventTable(val);\n                state[index]=val.state;\n                ++index;\n\n\n            }else  if(shuffle.valueOf()===1 && val.sport===\"SNOOKER\"){\n                this.eventTable(val);\n                state[index]=val.state;\n                ++index;\n\n\n            } else  if(shuffle.valueOf()===2 && val.sport===\"HANDBALL\"){\n                this.eventTable(val);\n                state[index]=val.state;\n                ++index;\n\n\n            }else if(shuffle.valueOf()===3 && val.sport===\"ICE_HOCKEY\"){\n                this.eventTable(val);\n                state[index]=val.state;\n                ++index;\n\n\n            }else if(shuffle.valueOf()===4 && val.sport===\"TENNIS\"){\n                this.eventTable(val);\n                state[index]=val.state;\n                ++index;\n\n            }\n\n\n\n\n\n        }\n\n        this.vote(state);\n    }\n\n     vote(state){\n         let team=document.querySelectorAll(\".team\");\n         let user=document.querySelector(\"#user\");\n         let ok=document.querySelector(\"#ok\");\n         let name=document.querySelector(\"#name\");\n         let teamCss=\"background-color:green; color:white\";\n         let whatAmI=document.querySelector(\"#what_ami\");\n         let vote=document.querySelector(\"#vote\");\n         let winner=document.querySelector(\"#teams_place_holder\");\n         let score=document.querySelector(\"#score\");\n         var awayEngine;\n         var homeEngine;\n         let count=0;\n\n\n         team.forEach(function (el,key) {\n\n             el.addEventListener(\"click\",function (ev) {\n                 el.style.cssText=teamCss;\n                 ev.preventDefault();\n                 ev.stopImmediatePropagation();\n                 awayEngine=Math.floor(Math.random() * Math.floor(5));\n                 homeEngine=Math.floor(Math.random() * Math.floor(5));\n                 const rows = document.querySelectorAll('tr');\n                 const rowsArray = Array.from(rows);\n                 const rowIndex = rowsArray.findIndex(row => row.contains(ev.target));\n\n\n                 if(state[rowIndex]===\"FINISHED\"){\n\n                     el.style.cssText=\"background-color:white color:black\";\n                     alert(\"The poll has already finished, choose another team\" )\n                 } else if(key===0){\n                     count+=1;\n\n                     whatAmI.textContent=\"Away\";\n                     name.value=\"\";\n                     return false;\n\n                 }else {\n                     whatAmI.textContent=\"Home\";\n                     count+=1;\n                     name.value=\"\";\n                     return false;\n                 }\n\n             });\n\n\n\n         });\n\n         vote.addEventListener(\"click\",function (e) {\n             if(count<=1){\n                 alert(\"needed two team to vote\");\n                 return false;\n             }else {\n                 if(awayEngine>homeEngine){\n                     winner.textContent=\"Away Team\";\n                     score.textContent=\"Wins\";\n                     count=0;\n                 }else  if(homeEngine>awayEngine) {\n                     winner.textContent=\"Home Team\";\n                     score.textContent=\"Wins\";\n                     count=0;\n\n                 }else {\n                     winner.textContent=\"Team\";\n                     score.textContent=\"Draw\";\n                     count=0;\n                 }\n\n             }\n             team.forEach(function (el) {\n\n                 el.style.cssText=\"background-color:white; color:black\";\n             });\n\n             e.stopImmediatePropagation();\n             e.preventDefault();\n         });\n         ok.addEventListener(\"click\",function (ev){\n             if ([\"\",\" \",undefined].includes(name.value)){\n                 alert(\"The name field must not be left empty\")\n             } else {\n                 user.style.display=\"none\";\n             }\n\n\n         })\n\n\n\n\n     }\n        componentDidMount() {\n          this.loadDBEngine();\n\n\n        }*/\n\n\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}